(function(){angular.module("app.services",["ngResource"]).factory("Auth",["$rootScope","$http","$q","$window","SessionService",function(n,t,i,r,u){var s,f,o,e;return n.accessLevels=s=routingConfig.accessLevels,n.userRoles=e=routingConfig.userRoles,r.sessionStorage.user||(n.currentUser={username:"",role:e.public}),r.sessionStorage.user&&(n.currentUser=angular.fromJson(r.sessionStorage.user)),t.defaults.headers.common["x-auth-token"]=n.currentUser.auth_token,o=function(n){return _.find(routingConfig.userRolesArray,function(t){return t.bitMask===n})},f={},f.passwordreset=function(n){return u.passwordreset({email_or_mobile:n})},f.updatepassword=function(n,t,i){return u.passwordupdate({email:n,password:t,token:i})},f.signout=function(){return n.currentUser={username:"",role:e.public},r.sessionStorage.user=angular.toJson(n.currentUser),u["delete"]},f.signin=function(f,e){var s;return s=i.defer(),u.save({email:f,password:e},function(i){var u;return u=o(i.role),n.currentUser.username=i.email,n.currentUser.firstname=i.firstname,n.currentUser.lastname=i.lastname,n.currentUser.auth_token=i.auth_token,n.currentUser.venue_id=i.venue_id,n.currentUser.role=u,t.defaults.headers.common["x-auth-token"]=n.currentUser.auth_token,r.sessionStorage.user=angular.toJson(n.currentUser),s.resolve(i)},function(n){return t.defaults.headers.common["x-auth-token"]="",s.reject(n)}),s.promise},f.authorize=function(t,i){return i||(i=n.currentUser.role),t.bitMask&i.bitMask},f.isLoggedIn=function(){return n.currentUser.role.title!==e.public.title},f.getCurrentUser=function(){return n.currentUser},f}]).factory("UserService",["$resource",function(n){return n("/v1/users/:verb/:id",{},{"new":{method:"GET",isArray:!1,params:{verb:"new"}},getbytoken:{method:"GET",isArray:!1,params:{verb:"getbytoken"}},post:{method:"POST",isArray:!1,params:{}},put:{method:"PUT",isArray:!1,params:{}}})}]).factory("VenueService",["$resource",function(n){return n("/v1/venues/:verb/:id",{},{"new":{method:"GET",isArray:!1,params:{verb:"new"}},post:{method:"POST",isArray:!1,params:{}},put:{method:"PUT",isArray:!1,params:{}}})}]).factory("ProductService",["$resource",function(n){return n("/v1/venues/:venueId/products/:verb/:id",{},{"new":{method:"GET",isArray:!1,params:{verb:"new"}},post:{method:"POST",isArray:!1,params:{}},put:{method:"PUT",isArray:!1,params:{}}})}]).factory("SessionService",["$resource",function(n){return n("/v1/sessions/:verb/:id",{},{passwordreset:{method:"POST",isArray:!1,params:{verb:"passwordreset"}},passwordupdate:{method:"POST",isArray:!1,params:{verb:"passwordupdate"}}})}])}).call(this);
/*
//# sourceMappingURL=services.min.js.map
*/